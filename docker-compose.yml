services:
  endar_server:
    container_name: endar_server
    image: endar_server
    depends_on:
      - postgres
      - code_server
    networks:
      - web_nw
      - db_nw
    ports:
      - "5000:5000"
    restart: unless-stopped
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER:-db1}:${POSTGRES_PASSWORD:-db1}@${POSTGRES_HOST:-postgres}/${POSTGRES_DB:-db1}
      - DEFAULT_EMAIL=${DEFAULT_EMAIL:-admin@example.com}
      - DEFAULT_PASSWORD=${DEFAULT_PASSWORD:-admin}
      - SETUP_DB=${SETUP_DB:-no}
      - POSTGRES_DB=${POSTGRES_DB:-db1}
      - DOC_LINK=https://github.com/queball1999/endar
      - VERSION=${VERSION:-1.0.0}
      - APP_NAME=Endar
      - FLASK_ENV=production
    env_file:
      - .env.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.endar_server.rule=Host(`192.168.4.142`)"
      - "traefik.http.routers.endar_server.entrypoints=web"
      - "traefik.http.services.endar_server.loadbalancer.server.port=5000"
      - "traefik.docker.network=endar_web_nw"
  
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-db1}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-db1}
      POSTGRES_DB: ${POSTGRES_DB:-db1}
      PGDATA: /data/postgres
    networks:
      - db_nw
    restart: unless-stopped

  code_server:
    container_name: code_server
    image: codercom/code-server:latest
    user: 1000:1000
    networks:
      - web_nw
    ports:
      - "8443:8080"
    environment:
      - HASHED_PASSWORD=${DEFAULT_PASSWORD_HASH} # Hashed version of password
      - GIT_AUTHOR_NAME=Endar
      - GIT_AUTHOR_EMAIL=admin@example.com
    working_dir: /home/coder/scripts  # Set the working directory
    volumes:
      - ./code-server:/home/coder/.local/share/code-server:rw
      - ./code-server/scripts:/home/coder/scripts:rw
      - ./code-server/.config:/home/coder/.config:rw
      - ./code-server/.cache:/home/coder/.cache:rw
    read_only: true
    tmpfs:
      - /tmp  # Allow temporary storage for system functions
    security_opt:
      - no-new-privileges:true  # Prevent privilege escalation
    cap_drop:
      - ALL  # Drop all capabilities
    command: code-server --disable-telemetry --disable-getting-started-override --disable-file-downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code_server.rule=Host(`192.168.4.142`) && PathPrefix(`/code-server`)"
      - "traefik.http.routers.code_server.entrypoints=web"
      - "traefik.http.routers.code_server.middlewares=code_server_strip"
      - "traefik.http.services.code_server.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.code_server_strip.stripprefix.prefixes=/code-server"

  traefik:
    image: traefik:v2.9
    container_name: traefik
    ports:
      - "80:80"       # HTTP
      - "443:443"     # HTTPS
    networks:
      - web_nw
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml  # Traefik configuration file
    restart: unless-stopped
    labels:
      - "traefik.docker.network=endar_web_nw"

networks:
  web_nw:
    driver: bridge
  db_nw:
    driver: bridge
volumes:
  dbdata: